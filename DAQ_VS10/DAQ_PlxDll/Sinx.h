#ifndef _SINX_H
#define _SINX_H

#include "IviVisaType.h"
//滤波方法：数据=自己*ALL_FILTER_PARMSELF
//此五系数的总和为1
#define  ALL_FILTER_PARMBEFORE2  0.1   //				 +前2个数据*ALL_FILTER_PARMBEFORE2
#define  ALL_FILTER_PARMBEFORE1  0.2   //				 +前1个数据*ALL_FILTER_PARMBEFORE2
#define  ALL_FILTER_PARMSELF     0.4   //				 +本身数据*ALL_FILTER_PARMSELF
#define  ALL_FILTER_PARMAFTER1   0.2   //				 +后1个数据*ALL_FILTER_PARMAFTER1
#define  ALL_FILTER_PARMAFTER2   0.1   //				 +后2个数据*ALL_FILTER_PARMAFTER2

#define SINX_2DOTS   2
#define SINX_4DOTS   4
#define SINX_5DOTS   5
#define SINX_8DOTS   8
#define SINX_10DOTS 10
#define SINX_20DOTS 20 
#define SINX_25DOTS 25
#define SINX_50DOTS 50
#define SINX_100DOTS   100
#define MAX_COEFFICIENT 1000000

//2倍正玄插值滤波器距阵
static const int h2_blm[SINX_2DOTS][8]=
{
	{0,3153,-25333,127400,442026,-56707,10040,-580},
	{-580,10040,-56707,442026,127400,-25333,3153,0}
};

//4倍正玄插值滤波器距阵
static const int h4_blm[SINX_4DOTS][8]=
{
	{0,757,-5938,28234,242523,-19105,3839,-364},
	{-76,3368,-21501,105775,188687,-31602,5745,-341},
	{-341,5745,-31602,188687,105775,-21501,3368,-76},
	{-364,3839,-19105,242523,28234,-5938,757,0}
};

//5倍正玄插值滤波器距阵
static const int h5_blm[SINX_5DOTS][8]=
{
	{0,478,-3730,17566,196139,-12876,2641,-270},
	{-33,2052,-13520,64498,167556,-24951,4774,-354},
	{-176,3947,-22801,119061,119061,-22801,3947,-176},
	{-354,4774,-24951,167556,64498,-13520,2052,-33},
	{-270,2641,-12876,196139,17566,-3730,478,0}
};	

//8倍正弦插值滤波器矩阵
static const int h8_blm[SINX_8DOTS][8] = 
{
	{0,182,-1412,6560,124030,-5411,1142,-129},
	{-5,711,-4933,22852,116779,-12773,2606,-250},
	{-33,1425,-8999,42483,103163,-15875,3094,-243},
	{-91,2210,-12870,63830,84810,-15542,2860,-172},
	{-172,2860,-15542,84810,63830,-12870,2210,-91},
	{-243,3094,-15875,103163,42483,-8999,1425,-33},
	{-250,2606,-12773,116779,22852,-4933,711,-5},
	{-129,1142,-5411,124030,6560,-1412,182,0}
};

//10倍正玄插值滤波器距阵
static const int h10_blm[SINX_10DOTS][8]=
{
	{0,115,-893,4133,99491,-3544,755,-88},
	{-2,432,-3055,14062,95746,-8851,1839,-190},
	{-14,854,-5581,25895,88553,-11883,2390,-213},
	{-41,1349,-8218,39064,78468,-12912,2496,-187},
	{-84,1854,-10613,52812,66257,-12335,2275,-137},
	{-137,2275,-12335,66257,52812,-10613,1854,-84},
	{-187,2496,-12912,78468,39064,-8218,1349,-41},
	{-213,2390,-11883,88553,25895,-5581,854,-14},
	{-190,1839,-8851,95746,14062,-3055,432,-2},
	{-88,755,-3544,99491,4133,-893,115,0}
};
//20倍插值滤波器矩阵
static const int h20_blm[20][8] = 
{
	{0,28,-218,1000,49923,-926,201,-25},
	{0,96,-704,3216,49450,-2556,548,-64},
	{-1,178,-1252,5706,48513,-3889,824,-91},
	{-3,274,-1852,8449,47131,-4930,1031,-107},
	{-6,383,-2492,11416,45331,-5692,1172,-113},
	{-12,503,-3154,14570,43148,-6191,1252,-112},
	{-19,630,-3821,17869,40624,-6450,1280,-106},
	{-29,761,-4469,21267,37808,-6493,1261,-95},
	{-40,890,-5074,24710,34751,-6347,1205,-82},
	{-54,1012,-5608,28144,31511,-6042,1119,-68},
	{-68,1119,-6042,31511,28144,-5608,1012,-54},
	{-82,1205,-6347,34751,24710,-5074,890,-40},
	{-95,1261,-6493,37808,21267,-4469,761,-29},
	{-106,1280,-6450,40624,17869,-3821,630,-19},
	{-112,1252,-6191,43148,14570,-3154,503,-12},
	{-113,1172,-5692,45331,11416,-2492,383,-6},
	{-107,1031,-4930,47131,8449,-1852,274,-3},
	{-91,824,-3889,48513,5706,-1252,178,-1},
	{-64,548,-2556,49450,3216,-704,96,0},
	{-25,201,-926,49923,1000,-218,28,0}
};


//25倍正玄插值滤波器距阵
static const int h25_blm[SINX_25DOTS][8] = 
{
	{0,18,-139,636,39956,-598,130,-16},
	{0,60,-443,2018,39713,-1680,362,-43},
	{0,109,-779,3544,39231,-2610,558,-64},
	{-1,165,-1145,5206,38516,-3388,717,-78},
	{-3,229,-1535,6992,37577,-4019,841,-87},
	{-5,299,-1946,8891,36424,-4507,932,-91},
	{-8,375,-2369,10889,35074,-4860,991,-92},
	{-12,455,-2797,12967,33543,-5085,1022,-89},
	{-18,539,-3221,15109,31849,-5194,1027,-83},
	{-24,623,-3632,17292,30012,-5196,1010,-76},
	{-32,706,-4020,19497,28056,-5102,974,-68},
	{-40,785,-4372,21699,26002,-4926,923,-59},
	{-49,859,-4679,23875,23875,-4679,859,-49},
	{-59,923,-4926,26002,21699,-4372,785,-40},
	{-68,974,-5102,28056,19497,-4020,706,-32},
	{-76,1010,-5196,30012,17292,-3632,623,-24},
	{-83,1027,-5194,31849,15109,-3221,539,-18},
	{-89,1022,-5085,33543,12967,-2797,455,-12},
	{-92,991,-4860,35074,10889,-2369,375,-8},
	{-91,932,-4507,36424,8891,-1946,299,-5},
	{-87,841,-4019,37577,6992,-1535,229,-3},
	{-78,717,-3388,38516,5206,-1145,165,-1},
	{-64,558,-2610,39231,3544,-779,109,0},
	{-43,362,-1680,39713,2018,-443,60,0},
	{-16,130,-598,39956,636,-139,18,0}
};

//50倍正玄插值滤波矩阵
static const int h50_blm[50][8] =
{
	{0,4,-34,157,19989,-152,33,-4},
	{0,14,-106,484,19959,-442,96,-12},
	{0,25,-183,831,19898,-713,155,-19},
	{0,36,-263,1195,19808,-965,209,-25},
	{0,49,-348,1577,19687,-1198,258,-30},
	{0,62,-436,1976,19537,-1412,303,-35},
	{-1,76,-528,2391,19359,-1606,343,-38},
	{-1,92,-623,2823,19151,-1783,378,-41},
	{-1,108,-721,3270,18917,-1941,410,-44},
	{-2,125,-822,3732,18655,-2081,437,-45},
	{-2,143,-925,4207,18367,-2203,459,-46},
	{-3,161,-1030,4695,18054,-2308,478,-47},
	{-4,180,-1136,5194,17716,-2397,493,-47},
	{-5,200,-1243,5705,17355,-2469,505,-47},
	{-6,220,-1350,6225,16973,-2526,512,-46},
	{-7,241,-1458,6753,16569,-2567,517,-45},
	{-9,262,-1564,7289,16145,-2595,518,-44},
	{-10,283,-1669,7830,15703,-2608,517,-42},
	{-12,304,-1772,8376,15244,-2609,513,-40},
	{-14,326,-1873,8925,14770,-2597,506,-38},
	{-16,347,-1970,9477,14281,-2574,497,-36},
	{-18,367,-2063,10028,13779,-2540,486,-34},
	{-20,387,-2151,10579,13265,-2496,473,-32},
	{-22,406,-2234,11127,12742,-2442,458,-29},
	{-24,425,-2311,11671,12210,-2380,442,-27},
	{-27,442,-2380,12210,11671,-2311,425,-24},
	{-29,458,-2442,12742,11127,-2234,406,-22},
	{-32,473,-2496,13265,10579,-2151,387,-20},
	{-34,486,-2540,13779,10028,-2063,367,-18},
	{-36,497,-2574,14281,9477,-1970,347,-16},
	{-38,506,-2597,14770,8925,-1873,326,-14},
	{-40,513,-2609,15244,8376,-1772,304,-12},
	{-42,517,-2608,15703,7830,-1669,283,-10},
	{-44,518,-2595,16145,7289,-1564,262,-9},
	{-45,517,-2567,16569,6753,-1458,241,-7},
	{-46,512,-2526,16973,6225,-1350,220,-6},
	{-47,505,-2469,17355,5705,-1243,200,-5},
	{-47,493,-2397,17716,5194,-1136,180,-4},
	{-47,478,-2308,18054,4695,-1030,161,-3},
	{-46,459,-2203,18367,4207,-925,143,-2},
	{-45,437,-2081,18655,3732,-822,125,-2},
	{-44,410,-1941,18917,3270,-721,108,-1},
	{-41,378,-1783,19151,2823,-623,92,-1},
	{-38,343,-1606,19359,2391,-528,76,-1},
	{-35,303,-1412,19537,1976,-436,62,0},
	{-30,258,-1198,19687,1577,-348,49,0},
	{-25,209,-965,19808,1195,-263,36,0},
	{-19,155,-713,19898,831,-183,25,0},
	{-12,96,-442,19959,484,-106,14,0},
	{-4,33,-152,19989,157,-34,4,0}
};

//100倍正玄插值滤波矩阵
static const int h100_blm[100][8] =
{
	{0,1,-9,39,9996,-38,8,-1},
	{0,3,-26,119,9992,-113,25,-3},
	{0,6,-44,201,9985,-186,41,-5},
	{0,8,-63,285,9973,-256,56,-7},
	{0,11,-82,371,9958,-324,70,-9},
	{0,14,-102,460,9939,-389,85,-10},
	{0,17,-122,551,9917,-452,98,-12},
	{0,20,-142,645,9890,-513,111,-13},
	{0,23,-164,740,9860,-571,123,-15},
	{0,26,-185,838,9826,-627,135,-16},
	{0,30,-207,938,9789,-680,146,-17},
	{0,33,-230,1040,9748,-732,157,-18},
	{0,37,-253,1144,9703,-780,167,-19},
	{0,40,-276,1250,9655,-827,177,-20},
	{0,44,-300,1358,9603,-871,186,-21},
	{0,48,-325,1467,9548,-913,194,-21},
	{-1,52,-349,1579,9489,-952,202,-22},
	{-1,56,-374,1693,9427,-990,209,-22},
	{-1,61,-399,1808,9362,-1025,216,-23},
	{-1,65,-425,1925,9293,-1058,222,-23},
	{-1,70,-451,2044,9221,-1088,228,-23},
	{-1,74,-477,2165,9146,-1117,233,-24},
	{-1,79,-503,2287,9067,-1143,238,-24},
	{-2,83,-529,2410,8986,-1167,242,-24},
	{-2,88,-556,2535,8902,-1189,246,-24},
	{-2,93,-583,2661,8814,-1209,249,-24},
	{-2,98,-609,2789,8724,-1228,252,-24},
	{-3,103,-636,2918,8631,-1244,254,-24},
	{-3,108,-663,3048,8536,-1258,256,-23},
	{-3,113,-690,3179,8437,-1270,258,-23},
	{-4,119,-717,3311,8336,-1281,259,-23},
	{-4,124,-744,3444,8233,-1289,260,-23},
	{-4,129,-770,3578,8127,-1296,260,-22},
	{-5,134,-797,3713,8019,-1301,260,-22},
	{-5,140,-823,3848,7908,-1305,260,-22},
	{-5,145,-849,3984,7796,-1306,259,-21},
	{-6,150,-875,4121,7681,-1307,258,-21},
	{-6,156,-900,4258,7564,-1305,257,-20},
	{-7,161,-926,4395,7446,-1302,255,-20},
	{-7,166,-950,4533,7325,-1298,253,-19},
	{-8,172,-975,4670,7203,-1292,251,-19},
	{-8,177,-998,4808,7079,-1285,248,-18},
	{-9,182,-1022,4946,6953,-1276,246,-17},
	{-9,187,-1044,5084,6826,-1267,243,-17},
	{-10,192,-1067,5222,6698,-1256,239,-16},
	{-10,197,-1088,5359,6569,-1243,236,-16},
	{-11,202,-1109,5496,6438,-1230,232,-15},
	{-12,207,-1129,5633,6306,-1216,228,-15},
	{-12,211,-1148,5769,6173,-1200,224,-14},
	{-13,216,-1166,5904,6039,-1184,220,-13},
	{-13,220,-1184,6039,5904,-1166,216,-13},
	{-14,224,-1200,6173,5769,-1148,211,-12},
	{-15,228,-1216,6306,5633,-1129,207,-12},
	{-15,232,-1230,6438,5496,-1109,202,-11},
	{-16,236,-1243,6569,5359,-1088,197,-10},
	{-16,239,-1256,6698,5222,-1067,192,-10},
	{-17,243,-1267,6826,5084,-1044,187,-9},
	{-17,246,-1276,6953,4946,-1022,182,-9},
	{-18,248,-1285,7079,4808,-998,177,-8},
	{-19,251,-1292,7203,4670,-975,172,-8},
	{-19,253,-1298,7325,4533,-950,166,-7},
	{-20,255,-1302,7446,4395,-926,161,-7},
	{-20,257,-1305,7564,4258,-900,156,-6},
	{-21,258,-1307,7681,4121,-875,150,-6},
	{-21,259,-1306,7796,3984,-849,145,-5},
	{-22,260,-1305,7908,3848,-823,140,-5},
	{-22,260,-1301,8019,3713,-797,134,-5},
	{-22,260,-1296,8127,3578,-770,129,-4},
	{-23,260,-1289,8233,3444,-744,124,-4},
	{-23,259,-1281,8336,3311,-717,119,-4},
	{-23,258,-1270,8437,3179,-690,113,-3},
	{-23,256,-1258,8536,3048,-663,108,-3},
	{-24,254,-1244,8631,2918,-636,103,-3},
	{-24,252,-1228,8724,2789,-609,98,-2},
	{-24,249,-1209,8814,2661,-583,93,-2},
	{-24,246,-1189,8902,2535,-556,88,-2},
	{-24,242,-1167,8986,2410,-529,83,-2},
	{-24,238,-1143,9067,2287,-503,79,-1},
	{-24,233,-1117,9146,2165,-477,74,-1},
	{-23,228,-1088,9221,2044,-451,70,-1},
	{-23,222,-1058,9293,1925,-425,65,-1},
	{-23,216,-1025,9362,1808,-399,61,-1},
	{-22,209,-990,9427,1693,-374,56,-1},
	{-22,202,-952,9489,1579,-349,52,-1},
	{-21,194,-913,9548,1467,-325,48,0},
	{-21,186,-871,9603,1358,-300,44,0},
	{-20,177,-827,9655,1250,-276,40,0},
	{-19,167,-780,9703,1144,-253,37,0},
	{-18,157,-732,9748,1040,-230,33,0},
	{-17,146,-680,9789,938,-207,30,0},
	{-16,135,-627,9826,838,-185,26,0},
	{-15,123,-571,9860,740,-164,23,0},
	{-13,111,-513,9890,645,-142,20,0},
	{-12,98,-452,9917,551,-122,17,0},
	{-10,85,-389,9939,460,-102,14,0},
	{-9,70,-324,9958,371,-82,11,0},
	{-7,56,-256,9973,285,-63,8,0},
	{-5,41,-186,9985,201,-44,6,0},
	{-3,25,-113,9992,119,-26,3,0},
	{-1,8,-38,9996,39,-9,1,0}
};

void SinxKenerl2(unsigned char *OutBuffer, const unsigned char *InBuffer, int Len);
void SinxKenerl4(unsigned char *OutBuffer, const unsigned char *InBuffer, int Len);
void SinxKenerl5(unsigned char *OutBuffer, const unsigned char *InBuffer, int Len);
void SinxKenerl8(unsigned char *OutBuffer, const unsigned char *InBuffer, int Len);
void SinxKenerl10(unsigned char *OutBuffer, const unsigned char *InBuffer, int Len);
void SinxKenerl20(unsigned char *OutBuffer, const unsigned char *InBuffer, int Len);
void SinxKenerl25(unsigned char *OutBuffer, const unsigned char *InBuffer, int Len);
void SinxKenerl50(unsigned char *OutBuffer, const unsigned char *InBuffer, int Len);
void SinxKenerl100(unsigned char *OutBuffer, const unsigned char *InBuffer, int Len);

void LineInterpolation(ViPByte pSrc, ViInt32 length, ViInt32 rate,ViPByte pDst);//整数倍线性插值

//1点到2.5点:先10倍插值再4倍抽点    20110819  XHG Fixed(2.5倍插值)
void OneToTwoPointFiveKenerl(ViPByte OutBuffer, const ViPByte InBuffer, ViInt32 Len);

//抽点
void SampleData(const ViPByte pSrc, ViPByte pDst, ViInt32 nSizeAfterSample, ViInt32 nRate);

//得到一个数组中的最大值和最小值 
void GetMaxMin(const ViPByte data,ViInt32 len,ViPByte max,ViPByte min);

//抽点时要做峰值检测
void SamplePeak(const ViPByte pSorc,ViInt32 nRate,ViPByte pDestMin,ViPByte pDestMax,ViInt32 nSizeAfterSample);		   

//正常抽点插值法
void SamplePeakInNormal(const ViPByte pSorc,ViInt32 nRate,ViPByte pDestMin,ViPByte pDestMax,ViInt32 nSizeAfterSample);

#endif